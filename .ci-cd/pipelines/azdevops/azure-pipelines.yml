trigger:
  branches:
    include:
    - main
  paths:
    include:
    - 'src'
pool:
  vmImage: windows-latest

variables:
  major: 1
  minor: 0
  patch: $[counter(format('{0}{1}{2}', variables['major'], variables['minor'], variables['Build.SourceBranchName']), 1)]

steps:

########
# INIT #
########

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $version = "$(major)" + "." + "$(minor)" + "." + "$(patch)"
      Write-Host $version
      Write-Host "##vso[build.updatebuildnumber]$version"
  displayName: update build number

- task: CopyFiles@2
  inputs:
    Contents: 'README.md'
    TargetFolder: 'src/'
  displayName: 'copy readme to task folder'

######################
# vss-extension.json #
######################

- task: SetJsonProperty@1
  inputs:
    JsonFile: 'src/vss-extension.json'
    PropertyPath: 'version'
    PropertyValue: '$(build.buildnumber)'
  displayName: update version @ vss-extension
  
#############
# task.json #
#############
- task: SetJsonProperty@1
  inputs:
    JsonFile: 'src/task/taskv$(major)/task.json'
    PropertyPath: 'version.Major'
    PropertyValue: '$(major)'
  displayName: update major @ task.json

- task: SetJsonProperty@1
  inputs:
    JsonFile: 'src/task/taskv$(major)/task.json'
    PropertyPath: 'version.Minor'
    PropertyValue: '$(minor)'
  displayName: update minor @ task.json

- task: SetJsonProperty@1
  inputs:
    JsonFile: 'src/task/taskv$(major)/task.json'
    PropertyPath: 'version.Patch'
    PropertyValue: '$(patch)'
  displayName: update patch @ task.json

#########
# build #
#########

- task: CmdLine@2
  inputs:
    script: 'npm install -g tfx-cli'
  displayName: 'install tfx cli'

- task: CmdLine@2
  inputs:
    script: 'tfx extension create --manifest-globs vss-extension.json'
    workingDirectory: 'src'
  displayName: 'create task vsix'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'src'
    Contents: '**.vsix'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'copy files to artifact folder'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'publish artifacts'
